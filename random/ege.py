from ipaddress import IPv4Address, ip_network

# какаято случайная задачка из егэ
# https://kompege.ru/task  и номер 14650

"""В терминологии сетей TCP/IP маской сети называют двоичное число, 
которое показывает, какая часть IP-адреса узла сети относится к адресу сети, 
а какая - к адресу узла в этой сети. 
Адрес сети получается в результате применения поразрядной конъюнкции к заданному адресу узла и маске сети.

Два узла, находящиеся в разных подсетях, имеют IP-адреса 216.54.187.235 и 216.54.174.128. 
В масках обеих подсетей одинаковое количество единиц. 
Укажите наибольшее возможное количество единиц в масках этих подсетей. 
Учтите, что два адреса в любой подсети зарезервированы: адрес всей подсети и широковещательный адрес."""

def idk(ip1: str, ip2: str):
    ip1 = IPv4Address(ip1)
    ip2 = IPv4Address(ip2)
    for mask in range(0, 32 + 1):
        net1 = ip_network(f"{ip1}/{mask}", False)
        net2 = ip_network(f"{ip2}/{mask}", False)
        if net1 != net2 and ip1 not in (net1[0], net1[-1]) and ip2 not in (net2[0], net2[-1]):
            print(net1, net2, mask)


def convert_to_bin(ip: str = "0.0.0.0"):
    result = ''
    for part in ip.split("."):
        result += bin(int(part))[2:].zfill(8) + ' '
    print(result)


if __name__ == "__main__":
    convert_to_bin("216.54.187.235")
    convert_to_bin("216.54.174.128")

    idk("216.54.187.235", "216.54.174.128")
